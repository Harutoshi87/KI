ch09. 파일 입출력 프로그래밍

파일 : .txt(텍스트 저장 용도);
        .pickel/.pkl/.data(객체 list, dictlist 등 객체 저장 용도) (ML 모델을 저장, 배열 저장);
        csv;
        json;
        h5/*.hdf5(dataframe객체, dictlist) (DL 모델을 저장)
        (txt, csv, json 는 메모장에서 열리고 csv와 json은 다수의 데이터 저장용으로 사용)


1. txt 파일에 데이터 저장하고 불러오기
한글 읽기/쓰기
cp949(한글 완성형 확장형) : open 함수의 기본 인코딩(windows). 주피터 노트북에서 열기 불가능
utf-8(한글 조합형) : 주피터 노트북에서 열기 가능

with open('filepath(상대경로/절대경로))', 'mode(r|w|a), encoding) as f:
	list변수 = f.readlines() / 문자변수 = f.read()
	f.write(저장할 문자열) / f.writelines(list변수)

2. pickle(pkl, data)을 이용한 객체 저장 및 불러오기
머신러닝 모델 저장, 배열 저장, 객체 저장
	2.1.형식이 있는 텍스트 데이터 불러오기
	2.2.pickling:
		객체 리스트 -> pickle 파일로 쓰기
		pickle 파일 -> 객체 리스트

with open('filepath', 'wb|rb|ab') as f:
	객체 리스트 변수 = pickle.load(f) read==불러오기==input
	pickle.dump(저장할 객체 리스트 변수, f)==저장하기==output

3. csv 파일 읽기(i)/쓰기(o)
csv 파일의 자료를 리스트 데이터로 읽고 쓰기(3.1 & 3.2)
csv 파일의 자료를 딕셔너리 데이터로 읽고 쓰기(3.3 & 3.4)
	3.1.reader(csv파일을 list 데이터로 읽기)
	3.2.writer(list 데이터를 csv파일로 쓰기)
	3.3.DictReader(csv파일을 딕셔너리 데이터로 읽기)
	3.4.DictWriter(딕셔너리 데이터(딕셔너리 list)를 csv파일로 쓰기)

with open('filepath', 'w|r|a', encoding) as f: # 기본 인코딩 cp949
	reader = csv.reader(f) -> csv파일을 list데이터로 read
	writer = csv.writer(f)
	writer.writerows(list데이터) -> list데이터를 csv로

	dic_reader = csv.DictReader(f) -> 딕셔너리 데이터로
	dic_writer = csv.DictWriter(f)
	dic_writer.writeheader(); dic_writer.writerows(list) -> csv파일로


4. JSON파일에 저장하고 불러오기(dump, load)
[{'title':'국가정보원 화재', 'url':'http://~', 'content':'~~'},
 {'title':'국가정보원 화재', 'url':'http://~', 'content':'~~'},
 {'title':'국가정보원 화재', 'url':'http://~', 'content':'~~'}]
	4.1.JSON dump(파일에 저장)
		(1) 딕셔너리 list를 json파일로 저장
		(2) 객체 list를 json파일로 저장(객체를 딕셔너리로 바꾸는 함수 필요)

json.dump(리스트 변수, f, [ensure_ascii], [indent])
json.dump(객체 리스트 변수, f, default=cls.함수명=객체를 딕셔너리로 return)
		
	4.2.JSON load(파일 읽기)
		(1) json파일을 딕셔너리 리스트로 읽기
		(2) json파일을 객체 리스트로 읽기(딕셔너리를 객체로 return하는 함수가 필요)

with open('filepath', 'r|w|a', encoding) as f:
	리스트 변수 = json.load(f) -> 딕셔너리로 읽기
	객체 리스트 변수 = json.load(f, object_hook=함수명=딕셔너리를 객체로 return)

5. HDF5파일 쓰기/읽기
*.hdf5나 *.h5 파일을 볼 수 있는 hdfviewer를 설치
dictionary list, dataframe, DL-Model을 저장하는 용도

		# 데이터프레임을 hdf파일로 쓰기
		iris_df.to_hdf('data/ch09_irisdf.hdf5', key='iris') # 키 입력 필수!

		# hdf파일을 데이터프레임으로 읽어오기
		import pandas as pd
		load_iris_df = pd.read_hdf('data/ch09_irisdf.hdf5', key='iris')
		load_iris_df

		# 두 데이터프레임이 같은지 여부를 확인하는 방법
		iris_df.equals(load_iris_df)